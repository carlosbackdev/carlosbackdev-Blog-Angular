[
    {
      "title": "MovieSearch Aplicación Web",
      "video":"https://player.vimeo.com/video/1065072327?badge=0&autopause=0&player_id=0&app_id=58479",
      "images": [
        {
          "image": "/assets/images/project/moviesearch.webp"
        },
        {
          "image": "/assets/images/project/capturaMovieSearch.webp"
        }
      ],
      "repository": "https://github.com/carlosbackdev/MoviSearch",
      "link": "https://moviesearch.es",
      "descripcion": "Una aplicación de recomendaciones de películas que integra inteligencia artificial y procesamiento de lenguaje natural para ofrecer sugerencias personalizadas según las preferencias del usuario. A través de un servicio inteligente, la app analiza consultas en lenguaje natural y proporciona recomendaciones.",
      "explication": "#### API Spring Boot IA para Búsqueda de Películas y Chatbot 🤖\n\nEsta API es la columna vertebral de la plataforma, habilitando características avanzadas como búsquedas de películas por frases, interacciones con un chatbot y gestión de datos de usuarios. Se integra con múltiples APIs externas, como OpenAI, Google Translate, TMDB, Firebase y Datamuse, para ofrecer una experiencia de usuario fluida e inteligente. Esta es la parte backend del proyecto MovieSearch App Angular.\n\n---\n\n##### Tecnologías Usadas 🛠️\n- **Spring Boot**: Framework principal para construir la API. 🟢\n- **Java**: Lenguaje de programación utilizado en la API. 🔴\n- **MySQL**: Base de datos para almacenar datos de usuarios e interacciones. 🐬\n- **JWT**: Para seguridad, la API usa tokens para autenticación. 🧑‍🦱\n- **OpenAI API**: Para el chatbot y tareas avanzadas de procesamiento de lenguaje natural (NLP). 🧠\n- **Google Translate API**: Para soporte multilingüe. ✍️\n- **TMDB API**: Para obtener datos sobre películas y series. 🎥\n- **Datamuse API**: Para mejorar las capacidades de búsqueda. 📘\n- **Firebase**: Para autenticación y actualizaciones en tiempo real. 🔥\n\n---\n\n##### Características Principales 🌟\n\n1. **Búsqueda de Películas por Frases 🎥**\n   - **Procesamiento de Lenguaje Natural (NLP)**: Analiza las frases de los usuarios utilizando herramientas de IA.\n   - **Integración con TMDB**: Busca en la base de datos TMDB para encontrar películas relevantes según las frases procesadas.\n   - **Búsqueda Avanzada**: Maneja consultas complejas y devuelve información detallada sobre las películas (descripción, elenco, calificaciones, etc.).\n\n2. **Integración con Chatbot de OpenAI 🤖**\n   - **OpenAI API**: Potencia un chatbot conversacional que puede responder preguntas de los usuarios, recomendar películas y asistir con las búsquedas.\n   - **Respuestas Dinámicas**: Genera respuestas humanas usando los modelos GPT de OpenAI.\n   - **Traducción de Idiomas**: Utiliza Google Translate API para soportar interacciones multilingües.\n\n3. **Gestión de Usuarios 👤**\n   - **Base de Datos MySQL**: Almacena los datos de los usuarios, como:\n      - Detalles de registro.\n      - Películas y series guardadas.\n      - Listas personalizadas.\n      - Comentarios y valoraciones.\n      - Historial de búsquedas.\n   - **Experiencia Personalizada**: Los usuarios pueden crear listas, guardar películas y compartir sus colecciones.\n\n4. **Preparación para Machine Learning 🧠**\n   - **Recopilación de Datos**: Todas las interacciones, búsquedas y preferencias de los usuarios se almacenan para futuros modelos de machine learning.\n   - **Análisis**: Permite obtener conocimientos sobre el comportamiento y preferencias de los usuarios para recomendaciones personalizadas.\n\n5. **Integración con Múltiples APIs 🔗**\n   - **TMDB API**: Obtiene datos sobre películas y series.\n   - **OpenAI API**: Maneja interacciones del chatbot y tareas complejas de NLP.\n   - **Google Translate API**: Soporta consultas y respuestas multilingües.\n   - **Datamuse API**: Mejora las capacidades de búsqueda con sugerencias de sinónimos y frases.\n   - **Firebase**: Gestiona la autenticación y actualizaciones en tiempo real.\n\n---\n\n##### Cómo Funciona ⚙️\n1. **Entrada del Usuario ⬅️**\n   - El usuario ingresa una frase o consulta (por ejemplo, 'Encuentra una película sobre aventuras espaciales').\n\n2. **Procesamiento de la Frase 📘**\n   - La API utiliza OpenAI y Google Translate para analizar y procesar la frase.\n   - Las tareas complejas de NLP son manejadas por OpenAI, mientras que la traducción de idioma es gestionada por Google Translate.\n\n3. **Búsqueda de Películas 🎥**\n   - La consulta procesada se envía a la API TMDB para obtener las películas relevantes.\n   - Los resultados son filtrados y devueltos al usuario con información detallada.\n\n4. **Interacción con el Chatbot 🗃️**\n   - El chatbot, alimentado por OpenAI, interactúa con el usuario para proporcionar información adicional, recomendaciones o asistencia.\n\n5. **Almacenamiento de Datos 🐬**\n   - Todos los datos del usuario, incluidas las búsquedas, películas guardadas, listas y comentarios, se almacenan en la base de datos MySQL.\n   - El historial de búsquedas y las interacciones se registran para su análisis futuro en modelos de machine learning.\n\n---\n\n#### Aplicación Web y Android de MovieSearch IA 🍿\nLa aplicación MovieSearch permite a los usuarios buscar películas a través de frases y disfrutar de una experiencia fluida, con una interfaz intuitiva, gracias al uso de tecnologías modernas en el frontend. Los usuarios pueden interactuar con el chatbot, guardar películas en listas y compartirlas.\n\n##### Tecnologías Usadas en el Frontend 🛠️\n- **Angular**: Framework principal para la construcción de la aplicación web. 🔄\n- **TypeScript**: Lenguaje de programación para desarrollar la lógica de la aplicación. 🟡\n- **HTML**: Estructura básica de la página web. 🌐\n- **CSS/SCSS**: Estilos para la presentación visual y diseño responsivo. 🎨\n- **Firebase**: Para la autenticación de usuarios con Google. 🔥\n- **Capacitor**: Para convertir la aplicación Angular en una app Android. 🎨\n\n---\n\n##### Composición del Proyecto 🚀\n- **Backend**: Spring Boot con herramientas de IA y NLP. 📊\n- **Base de Datos**: MySQL (Para información de usuarios, listas... y machine learning) y TMDB para datos de películas. 💾\n- **Frontend**: Tecnologías modernas de Angular 19 para una experiencia de usuario fluida. 🌐\n- **Firebase**: Para iniciar sesión con Google. 🔥\n- **Capacitor**: Para desplegar el proyecto Angular como una aplicación Android. 🎨",
      "id":1,
      "tecnology": [
        {
          "name": "Java",
          "image":"/assets/images/logo/java.png"
        },
        {
          "name": "MySQL",
          "image":"/assets/images/logo/mysql.png"
        },
        {
          "name": "Angular",
          "image":"/assets/images/logo/angular.png"
        },
        {
          "name": "Spring Boot",
          "image":"/assets/images/logo/spring.png"
        },{
          "name": "IA Integration",
          "image":"/assets/images/logo/ia.webp"
        }
      ]
    },{
      "title": "ElecIdea API  & App Web",
      "video":"https://player.vimeo.com/video/1065067394?badge=0&autopause=0&player_id=0&app_id=58479",
      "images": [
        {
          "image": "/assets/images/project/elecideaWeb.webp"
        },
        {
          "image": "/assets/images/project/capturaElecIdea.webp"
        }
      ],
      "repository": "https://github.com/carlosbackdev/ElecIdea-Web-App",
      "link": "https://www.elecidea.com",
      "descripcion": "Elecidea es una solución empresarial integral para el sector eléctrico, que incluye una API RESTful construida con Spring Boot, un frontend en JavaScript y una base de datos MySQL alojada en Google Cloud. El sistema utiliza una arquitectura basada en microservicios con contenedores Docker y despliegue continuo, optimizando la escalabilidad, mantenimiento y eficiencia operativa.",
      "explication": "#### Aplicación Web ElecIdea\n\nBienvenido a ElecIdea, una aplicación web para gestionar clientes e invoices eléctricas. Hereda las funcionalidades de la aplicación Elecidea y ofrece las siguientes características:\n\n##### Características Principales:\n- 📲 **Descarga la app**\n- 👥 **Regístrate como usuario**\n- 💾 **Gestiona tus datos**\n- 📑 **Visualiza clientes, facturas y proyectos**\n- 📊 **Realiza seguimiento de las finanzas de tu empresa**\n\nLa web está alojada en Netlify y se comunica con la API REST de Elecidea, desarrollada con **Spring Boot**.\n\n---\n\n##### Tecnologías Principales:\n- **Spring Boot**: Framework robusto para el desarrollo de la API backend 🚀\n- **Java**: Lenguaje de programación para la API ☕\n- **MySQL**: Base de datos alojada en Google Cloud SQL 🗄️\n- **Docker**: Contenerización de la aplicación 🐳\n- **Railway**: Plataforma de hosting para la imagen Docker 🚂\n- **Google Cloud**: Plataforma de nube para el hosting de la base de datos ☁️\n\n---\n\n#### Parte Web (Frontend):\n- **HTML**: Estructura las páginas web para una experiencia interactiva y accesible 🌐\n- **CSS**: Define los estilos y el diseño visual de la página, optimizando la apariencia 🎨\n- **JavaScript**: Conecta el frontend con el backend, maneja las interacciones de usuario y permite la creación de animaciones y efectos dinámicos 🔄\n\n##### Características Clave:\n- 📑 **Gestiona datos de clientes e invoices**\n- 📝 **Soporta registro de nuevos usuarios**\n- 💾 **Permite la gestión y visualización de datos**\n- 📊 **Realiza seguimiento de invoices, clientes y proyectos**\n- 📈 **Monitorea las finanzas de la empresa**\n\n##### Arquitectura:\nLa aplicación está construida usando una arquitectura de microservicios RESTful, que incluye:\n- **Controller**: Gestiona la interfaz REST con la lógica de negocio en el servicio.\n- **Service**: Implementa la lógica de negocio y actúa como intermediario entre el controller y el repository.\n- **Repository**: Maneja operaciones con las entidades y la interacción con las bases de datos.",
      "id":2,
      "tecnology": [
        {
          "name": "Spring Boot",
          "image":"/assets/images/logo/spring.png"
        },
        {
          "name": "Java",
          "image":"/assets/images/logo/java.png"

        },
        {
          "name": "Java Script",
          "image":"/assets/images/logo/javascript.png"
        },
        {
          "name": "MySQL",
          "image":"/assets/images/logo/mysql.png"
        },
        {
          "name": "Hibernate",
          "image":"/assets/images/logo/hibernate.png"
        },
        {
          "name": "Docker",
          "image":"/assets/images/logo/docker.svg"
        }
      ]
    },
    {
      "title": "ElecIdea software ERP desktop",
      "video":"https://player.vimeo.com/video/1065067394?badge=0&autopause=0&player_id=0&app_id=58479",
      "images": [
        {
          "image": "/assets/images/project/elecideaDesktop.webp"
        },
        {
          "image": "/assets/images/project/capturaElecideaDesktop.webp"
        }
      ],
      "repository": "https://github.com/carlosbackdev/ElecIdea-App-Desktop-Java",
      "link": "https://www.elecidea.com",
      "descripcion": "Aplicación de escritorio desarrollada en Java y MySQL, diseñada específicamente para gestionar funciones clave en el sector eléctrico. El sistema es una solución CRUD, que permite una gestión eficiente de diversas operaciones empresariales.",
      "explication": "##### 🌟 Características Principales:\n- 💳 **Gestión de Facturas**: Administra fácilmente las facturas de los clientes, visualiza el estado de los pagos y genera documentos de facturación.\n- 🧑‍💼 **Gestión de Clientes**: Almacena y realiza un seguimiento de la información detallada de los clientes, facilitando la administración de cada cuenta.\n- 🏗️ **Gestión de Proyectos**: Monitorea y sigue el progreso de los proyectos en curso, incluyendo los aspectos financieros y las etapas de finalización.\n- ⚙️ **Automatización de Facturas**: Exporta automáticamente las facturas en formato Excel y envíalas por correo electrónico a los clientes, optimizando el proceso de facturación.\n- 📈 **Seguimiento del Crecimiento Empresarial**: Realiza un seguimiento de la evolución de los clientes y el crecimiento del negocio, facilitando la toma de decisiones estratégicas.\n\n---\n\n##### 💻 Tecnologías Utilizadas:\n- **Java** para el desarrollo central de la aplicación.\n- **MySQL** para la gestión de la base de datos.\n- **Swing** para la interfaz gráfica de usuario (GUI).\n- **Flatlaf** para un diseño moderno de tema oscuro.\n- **Apache POI** para generar documentos en formato XLSX.\n- **JavaMail** para el envío automático de correos electrónicos.\n- **Java Ant** para la compilación y construcción de la aplicación.\n- **NetBeans** como entorno de desarrollo.\n\n---\n\n##### 🛠️ Utilidad:\nLa aplicación está diseñada para agilizar los procesos empresariales en el sector eléctrico, ofreciendo una solución integral para la facturación, gestión de clientes y seguimiento de proyectos. El sistema permite una gestión de datos fácil y una comunicación eficiente con los clientes, incluyendo el envío automático de facturas.",
      "id":3,
      "tecnology": [
        {
          "name": "Java",
          "image":"/assets/images/logo/java.png"

        },
        {
          "name": "MySQL",
          "image":"/assets/images/logo/mysql.png"
        },
        {
          "name": "Apache",
          "image":"/assets/images/logo/apache.png"
        },
        {
          "name": "Net Beans",
          "image":"/assets/images/logo/netbeans.png"
        }
      ]
    }
  ]
  